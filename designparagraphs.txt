encrypt(): This is the function that handles the RSA encryption process. The function takes two integer parameters p and q, an mpz_t object, an integer array for number conversion, an integer size variable, and the output stream object for the output file. The function calculates the totient using the integers p and q and creates a trigraph array. It interprets each trigraph as a number in base 26 (this is to aid in the conversion to alphabetical characters). The function then creates an encrypted trigraph array and then converts the enciphered trigraph code into quadragraphs. The function converts the quadragraph entries to characters and places them in an array to represent the encrypted string. This string is then printed to the user specified output file.

decrypt(): This is the function that handles the RSA decryption process. The function takes two mpz_t objects, a number conversion integer array, an integer size, and the output stream object for the output file. This function starts with a quadragraph array and interprets each quadragraph as a number in base 26. It then converts the enciphered quadragraph code back into trigraphs. These trigraph entries are then converted to characters in the same way. The characters that are produced are put into an array just as they are in the encryption function and printed to the outfile in the same way as well.

isPrime(): This function is an important part of the RSA process. Its main function is to test for primality using the Miller-Rabin method. This function takes two integer parameters. These parameters are the number to be checked, n, and the number of times the Miller-Rabin test should be run, k, as chosen by the user. The return type of this function is bool, it will return true if n is prime and false if it is not.
